"""role default and permissions

Revision ID: 727d53ab11f0
Revises: 7cc263b03de7
Create Date: 2020-05-28 14:11:04.306236

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '727d53ab11f0'
down_revision = '7cc263b03de7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('source',
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('required_level', sa.Integer(), nullable=True),
    sa.Column('time_to_make', sa.String(length=16), nullable=True),
    sa.Column('total_quantity', sa.Integer(), nullable=True),
    sa.Column('quantity_built', sa.Integer(), nullable=True),
    sa.Column('required_population', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('town',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('population_cap', sa.Integer(), nullable=True),
    sa.Column('coins', sa.Integer(), nullable=True),
    sa.Column('township_cash', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('community_building',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('factory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('farming',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('house',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('island',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item',
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('required_level', sa.Integer(), nullable=True),
    sa.Column('time_to_make', sa.String(length=16), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locomotive',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('source_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('town_id', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('shelf_count', sa.Integer(), nullable=True),
    sa.Column('crate_count', sa.Integer(), nullable=True),
    sa.Column('production_time_reduction_fraction', sa.Float(), nullable=True),
    sa.Column('exp_point_increase_fraction', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], ),
    sa.ForeignKeyConstraint(['town_id'], ['town.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('special',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('foundry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('imported',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufactured',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('roles', sa.Column('default', sa.Boolean(), nullable=True))
    op.add_column('roles', sa.Column('premissions', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_roles_default'), 'roles', ['default'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_roles_default'), table_name='roles')
    op.drop_column('roles', 'premissions')
    op.drop_column('roles', 'default')
    op.drop_table('plant')
    op.drop_table('material')
    op.drop_table('manufactured')
    op.drop_table('imported')
    op.drop_table('foundry')
    op.drop_table('special')
    op.drop_table('source_stats')
    op.drop_table('locomotive')
    op.drop_table('item')
    op.drop_table('island')
    op.drop_table('house')
    op.drop_table('farming')
    op.drop_table('factory')
    op.drop_table('community_building')
    op.drop_table('town')
    op.drop_table('source')
    # ### end Alembic commands ###
